<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 
		애플리케이션 설정정보가 정의된 properties 파일정보를 읽어서 관리하는 객체를 스프링 컨테이너가 생성하게 한다.
	 -->
	<context:property-placeholder location="classpath:spring/db.properties"/>
	
	<!-- 
		데이터베이스와 연결된 Connection객체를 관리하는 Connection Pool객체를 스프링 컨테이너가 생성하게 한다.
		* Connection Pool을 지원하는 라이브러리를 사용하면 성능이 뛰어난 Connection Pool객체를 생성할 수 있다.
			Apache commons-dbcp, c3p0 라이브러리는 성능이 우수한 COnnection Pool를 제공한다.
		* 샘플애플리케이션에서는 spring이 제공하는 Connection Pool를 스프링 컨테이너가 생성하게 할 것이다.
			DriverManagerDataSource는 스프링이 제공하는 Connection Pool 지원 클래스다.
	 -->
	 
	 <bean id="connectionPool" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 	<property name="driverClassName" value="${db.driver-class-name}"></property>
	 	<property name="url" value="${db.url}"></property>
	 	<property name="username" value="${db.username}"></property>
	 	<property name="password" value="${db.password}"></property>
	 </bean>
	 
	 <!-- 
	 	jdbcTemplate (데이터베이스 엑세스를 지원하는 spring-jdbc의 핵심 객체)를 스프링 컨테이너가 생성하게 한다.
	 	* jdbcTemplate는 Connection Pool 객체(데이터베이스와 연결을 지원하는 Connection객체를 관리하는 객체)를 의존성 주입받는다.
	  -->
	 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	 	<property name="dataSource" ref="connectionPool"></property>
	 </bean>
	 
	 <!-- 
	 	스프링 컨테이너의 빈으로 등록된 객체들의 @Autowired, @PostContructor, @PreDestroy, @Resource 어노테이션을
	 	감지해서 적절한 작업을 수행하는 객체들을 스프링 컨테이너가 생성하게 한다.
	  -->
	 <context:annotation-config />
	 <!-- 
	 	지정된 패키지 및 그 하위 패키지에서 @Component, @Repository, @Service, @Controller, @RestController,
	 	@ControllerAdvice, @RestControllerAdvice 등의 어노테이션이 지정된 클래스를 스캔해서 전부 스프링 컨테이너가 객체를 생성하도록 한다.
	  -->
	 <context:component-scan base-package="com.sample" />

</beans>
